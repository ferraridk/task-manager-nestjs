var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.134,1,1.347]],["body/modules/AppModule.html",[0,1.893,1,2.491,2,1.151,3,1.151,4,1.941,5,1.941,6,1.364,7,2.456,8,1.941,9,2.371,10,2.371,11,2.097,12,0.066,13,2.456,14,1.941,15,1.941,16,0.968,17,0.808,18,0.666,19,3.024,20,3.826,21,1.456,22,1.364,23,3.024,24,1.62,25,0.968,26,0.666,27,0.051,28,0.051]],["title/classes/CreateTaskDto.html",[26,0.554,29,1.134]],["body/classes/CreateTaskDto.html",[12,0.065,16,0.92,17,0.768,18,0.633,25,0.92,26,0.633,27,0.05,28,0.05,29,1.671,30,1.846,31,3.215,32,2.255,33,1.494,34,1.297,35,1.297,36,1.541,37,2.255,38,2.875,39,1.297,40,1.226,41,2.875,42,2.069,43,0.768,44,1.41,45,1.41,46,1.953,47,1.985,48,2.875,49,2.905,50,2.875]],["title/classes/GetTasksFilterDto.html",[26,0.554,51,1.134]],["body/classes/GetTasksFilterDto.html",[12,0.066,16,0.796,17,0.665,18,0.548,21,0.947,25,0.796,26,0.548,27,0.045,28,0.045,30,1.598,33,1.222,34,1.519,35,1.519,36,1.805,37,2.641,42,1.519,43,0.665,44,1.282,45,1.282,46,1.519,47,1.805,51,1.519,52,2.993,53,2.095,54,1.951,55,3.368,56,2.641,57,2.032,58,2.414,59,2.626,60,2.942,61,2.488,62,2.626,63,1.722,64,2.488,65,1.598]],["title/interfaces/Task.html",[40,0.672,66,1.347]],["body/interfaces/Task.html",[12,0.067,16,0.718,17,0.599,18,0.494,25,1.003,27,0.042,28,0.042,33,1.43,40,1.279,42,1.976,43,0.599,44,1.193,45,1.489,46,2.048,49,2.458,57,1.976,63,1.766,66,1.202,67,2.242,68,1.44,69,2.242,70,2.207,71,3.135,72,2.458,73,3.135,74,2.013,75,2.458,76,1.758,77,1.758,78,1.758,79,2.321,80,1.758,81,2.242,82,2.242,83,2.458,84,2.242,85,2.458]],["title/controllers/TasksController.html",[86,1.347,87,1.347]],["body/controllers/TasksController.html",[12,0.067,16,0.385,17,0.321,18,0.265,21,1.189,22,0.542,24,0.644,25,0.385,26,0.265,27,0.026,28,0.026,29,1.659,33,1.13,34,0.881,35,0.881,36,1.047,39,1.282,40,1.279,42,0.881,43,0.321,45,1.189,46,1.839,47,1.675,51,1.41,53,1.839,57,1.803,58,1.047,59,1.255,60,2.266,63,1.41,65,0.772,70,2.409,74,2.007,86,1.047,87,1.323,88,0.943,89,1.203,90,1.532,91,1.935,92,1.532,93,1.532,94,1.954,95,1.935,96,0.943,97,2.451,98,1.935,99,1.203,100,1.255,101,2.451,102,1.532,103,2.981,104,1.532,105,1.532,106,0.943,107,1.954,108,1.203,109,2.007,110,1.532,111,0.943,112,1.954,113,1.203,114,1.532,115,1.532,116,1.203,117,1.203,118,1.954,119,2.228,120,1.935,121,2.228,122,1.532,123,1.954,124,1.532,125,0.943,126,1.954,127,1.203,128,1.825,129,1.532,130,1.954,131,2.883,132,0.943,133,1.203,134,1.189,135,0.943,136,0.943,137,0.943,138,0.943,139,0.943,140,1.203,141,1.203,142,0.943,143,0.943,144,1.532,145,0.943,146,1.203,147,1.954,148,0.943,149,1.203,150,0.943,151,1.203,152,1.203,153,1.203,154,1.203,155,2.451,156,1.203,157,1.203,158,1.203,159,1.203,160,1.203,161,1.203,162,1.203,163,1.203,164,1.203,165,1.203]],["title/modules/TasksModule.html",[0,1.134,11,1.134]],["body/modules/TasksModule.html",[0,1.875,2,1.126,3,1.126,4,1.9,5,1.9,6,1.335,7,2.668,8,1.9,11,2.085,12,0.065,13,2.423,14,1.9,15,1.9,16,0.947,17,0.791,18,0.652,21,1.581,22,1.335,24,2.023,25,0.947,26,0.652,27,0.051,28,0.051,87,2.227,134,1.759,135,2.321,166,2.321,167,2.321,168,2.96,169,2.96]],["title/injectables/TasksService.html",[134,0.957,170,1.347]],["body/injectables/TasksService.html",[12,0.067,16,0.353,17,0.295,18,0.243,21,1.136,22,0.497,25,0.353,26,0.243,27,0.024,28,0.024,29,1.603,33,1.179,34,1.217,35,1.217,36,1.445,39,1.217,40,1.285,42,1.217,43,0.295,44,0.693,45,1.223,46,1.793,47,1.822,51,1.347,53,1.964,57,1.882,58,1.445,59,1.168,60,1.917,62,1.168,63,1.347,65,0.708,70,2.37,74,1.917,90,1.427,91,1.427,92,1.427,93,1.427,95,1.427,96,1.427,100,1.168,101,2.341,102,1.427,103,3.051,104,1.427,105,1.427,106,1.427,109,1.732,110,1.427,111,1.427,114,1.427,115,1.427,119,1.427,120,1.822,121,1.427,125,1.427,128,1.732,129,1.427,131,2.52,134,0.693,136,0.865,137,0.865,138,0.865,139,0.865,150,0.865,155,2.666,170,0.975,171,1.103,172,0.865,173,2.697,174,2.697,175,1.82,176,1.103,177,1.103,178,1.103,179,2.697,180,1.103,181,1.82,182,1.103,183,1.427,184,1.427,185,1.103,186,1.103,187,0.865,188,1.103,189,1.103,190,1.822,191,1.103,192,0.708,193,1.82,194,2.697,195,1.103,196,1.82,197,1.82,198,1.103,199,1.103,200,1.103,201,1.103,202,1.103,203,1.82,204,1.103,205,1.103,206,1.103,207,1.103]],["title/coverage.html",[208,2.177]],["body/coverage.html",[6,1.382,12,0.064,18,0.675,26,0.849,27,0.052,28,0.052,29,1.382,31,2.402,32,2.402,39,1.382,40,0.819,45,1.166,51,1.382,52,2.402,53,1.382,54,2.402,66,1.641,68,1.967,72,2.402,86,1.641,87,1.641,88,2.402,134,1.166,170,1.641,172,2.402,208,1.967,209,2.402,210,3.063,211,2.402,212,3.063,213,4.432,214,3.063,215,3.857,216,3.063,217,3.063,218,3.063,219,3.063,220,3.063,221,3.063,222,3.063]],["title/dependencies.html",[3,1.146,223,1.662]],["body/dependencies.html",[3,1.321,12,0.066,22,1.566,27,0.056,28,0.056,190,2.722,224,4.629,225,3.472,226,3.472,227,3.472,228,3.472,229,3.472,230,3.472,231,3.472,232,3.472]],["title/miscellaneous/enumerations.html",[233,1.136,234,2.363]],["body/miscellaneous/enumerations.html",[12,0.063,27,0.055,28,0.055,40,0.914,43,0.914,63,1.863,68,2.196,75,2.683,76,2.683,77,2.683,78,2.683,79,2.651,83,3.238,85,3.238,187,3.478,233,1.833,234,2.683,235,3.421]],["title/miscellaneous/functions.html",[233,1.136,236,2.363]],["body/miscellaneous/functions.html",[6,2.022,12,0.056,27,0.056,28,0.056,43,0.937,192,2.691,211,2.75,233,1.879,236,2.75,237,3.506,238,3.506,239,3.506,240,3.506,241,3.506,242,2.75,243,3.506,244,3.506,245,3.506,246,3.506]],["title/index.html",[43,0.566,80,1.662,122,1.662]],["body/index.html",[2,0.56,3,0.56,12,0.061,17,0.393,18,0.324,21,0.873,24,0.789,27,0.031,28,0.031,33,0.471,34,1.035,35,0.664,39,0.664,40,1.131,53,1.724,56,1.8,57,1.273,58,0.789,62,1.474,70,0.789,79,1.474,97,1.154,98,1.154,100,1.474,109,1.811,124,1.154,128,1.474,132,1.154,142,1.154,143,1.154,144,1.154,145,1.154,148,1.8,183,1.8,184,1.154,192,2.046,208,0.945,209,2.499,242,2.997,247,3.186,248,1.472,249,2.295,250,2.295,251,1.472,252,2.295,253,2.295,254,1.472,255,1.472,256,1.472,257,1.472,258,1.472,259,1.472,260,1.472,261,2.821,262,2.821,263,1.472,264,1.472,265,1.472,266,1.472,267,1.472,268,2.821,269,1.472,270,1.472,271,1.472,272,1.472,273,1.472,274,1.472,275,1.472,276,1.472,277,1.472,278,1.472,279,1.472,280,1.472,281,1.472,282,1.472,283,1.472,284,1.472,285,1.472,286,2.821,287,1.472,288,1.472,289,1.472,290,1.472,291,1.472,292,1.472,293,1.472,294,2.295,295,1.472,296,3.186,297,1.472,298,1.472,299,3.454,300,3.954,301,1.472,302,3.954,303,1.472,304,1.472,305,1.472,306,2.295,307,1.472,308,1.472,309,1.472,310,2.821,311,1.472,312,2.821,313,1.472,314,1.472,315,1.472,316,1.472,317,2.295,318,1.472,319,1.472,320,1.472,321,1.472,322,2.295,323,1.472,324,1.472,325,1.472,326,1.472,327,1.472,328,1.472,329,1.472,330,1.472,331,3.66,332,3.186,333,1.472,334,1.472,335,1.472,336,1.472,337,1.472,338,1.472,339,1.472,340,1.472,341,1.472,342,1.472,343,1.472,344,1.472,345,1.472,346,1.472,347,1.472,348,1.472,349,1.472,350,1.472,351,2.295,352,2.295,353,1.472,354,1.472,355,1.472,356,1.472,357,1.472,358,1.472,359,1.472,360,1.472,361,2.295,362,1.472,363,1.472,364,1.472,365,1.472,366,1.472,367,2.212,368,2.295,369,2.295,370,2.295,371,1.472,372,1.472,373,1.472,374,1.472,375,1.472,376,1.472,377,1.472,378,1.472,379,1.472,380,1.472,381,1.472,382,1.472,383,1.154,384,1.472,385,1.472,386,1.472,387,1.472,388,1.472,389,1.472,390,1.154]],["title/modules.html",[2,1.29]],["body/modules.html",[1,1.957,2,1.39,11,1.647,12,0.058,27,0.058,28,0.058,367,3.367,391,4.293,392,4.293,393,4.293]],["title/overview.html",[394,2.659]],["body/overview.html",[0,1.432,1,2.405,2,1.208,3,1.208,4,2.038,5,2.038,6,1.432,7,2.038,8,2.038,9,2.489,10,2.489,11,2.082,12,0.06,13,2.532,14,2.038,15,2.038,27,0.053,28,0.053,30,2.038,66,1.701,86,1.701,134,1.633,166,2.489,167,2.489,170,1.701,394,2.489,395,3.944,396,4.291]],["title/properties.html",[44,1.146,223,1.662]],["body/properties.html",[12,0.065,27,0.058,28,0.058,33,1.169,44,1.39,383,2.864,390,2.864,397,3.652,398,3.652,399,3.652]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"interfaces/Task.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0.0.1",{"_index":398,"title":{},"body":{"properties.html":{}}}],["0.2.0",{"_index":230,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":396,"title":{},"body":{"overview.html":{}}}],["1/1",{"_index":214,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":224,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":213,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":395,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":215,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":246,"title":{},"body":{"miscellaneous/functions.html":{}}}],["5/5",{"_index":216,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":218,"title":{},"body":{"coverage.html":{}}}],["7.8.1",{"_index":232,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":220,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":217,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":219,"title":{},"body":{"coverage.html":{}}}],["adding",{"_index":280,"title":{},"body":{"index.html":{}}}],["additional",{"_index":353,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":374,"title":{},"body":{"index.html":{}}}],["api",{"_index":286,"title":{},"body":{"index.html":{}}}],["app",{"_index":295,"title":{},"body":{"index.html":{}}}],["application",{"_index":192,"title":{},"body":{"injectables/TasksService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["applications",{"_index":256,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":179,"title":{},"body":{"injectables/TasksService.html":{}}}],["author",{"_index":383,"title":{},"body":{"index.html":{},"properties.html":{}}}],["available",{"_index":345,"title":{},"body":{"index.html":{}}}],["backend",{"_index":259,"title":{},"body":{"index.html":{}}}],["backers",{"_index":375,"title":{},"body":{"index.html":{}}}],["based",{"_index":183,"title":{},"body":{"injectables/TasksService.html":{},"index.html":{}}}],["before",{"_index":279,"title":{},"body":{"index.html":{}}}],["best",{"_index":269,"title":{},"body":{"index.html":{}}}],["body",{"_index":130,"title":{},"body":{"controllers/TasksController.html":{}}}],["body('status",{"_index":164,"title":{},"body":{"controllers/TasksController.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":393,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":391,"title":{},"body":{"modules.html":{}}}],["building",{"_index":251,"title":{},"body":{"index.html":{}}}],["built",{"_index":257,"title":{},"body":{"index.html":{}}}],["business",{"_index":324,"title":{},"body":{"index.html":{}}}],["channel",{"_index":365,"title":{},"body":{"index.html":{}}}],["choose",{"_index":338,"title":{},"body":{"index.html":{}}}],["class",{"_index":26,"title":{"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["classes",{"_index":30,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"overview.html":{}}}],["click",{"_index":334,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":166,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_providers",{"_index":167,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["collection",{"_index":332,"title":{},"body":{"index.html":{}}}],["completed",{"_index":84,"title":{},"body":{"interfaces/Task.html":{}}}],["compodoc",{"_index":317,"title":{},"body":{"index.html":{}}}],["compodocavailable",{"_index":321,"title":{},"body":{"index.html":{}}}],["const",{"_index":194,"title":{},"body":{"injectables/TasksService.html":{}}}],["constructor",{"_index":149,"title":{},"body":{"controllers/TasksController.html":{}}}],["constructor(private",{"_index":152,"title":{},"body":{"controllers/TasksController.html":{}}}],["containing",{"_index":102,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["contains",{"_index":41,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["controller",{"_index":86,"title":{"controllers/TasksController.html":{}},"body":{"controllers/TasksController.html":{},"coverage.html":{},"overview.html":{}}}],["controller('tasks",{"_index":140,"title":{},"body":{"controllers/TasksController.html":{}}}],["controllers",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"index.html":{}}}],["core",{"_index":291,"title":{},"body":{"index.html":{}}}],["corner",{"_index":337,"title":{},"body":{"index.html":{}}}],["courses",{"_index":363,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":208,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":100,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{},"index.html":{}}}],["created",{"_index":105,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["createtask",{"_index":91,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["createtask(createtaskdto",{"_index":96,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["createtaskdto",{"_index":29,"title":{"classes/CreateTaskDto.html":{}},"body":{"classes/CreateTaskDto.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["creating",{"_index":38,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["creation",{"_index":262,"title":{},"body":{"index.html":{}}}],["criteria",{"_index":348,"title":{},"body":{"index.html":{}}}],["crud",{"_index":146,"title":{},"body":{"controllers/TasksController.html":{}}}],["current",{"_index":73,"title":{},"body":{"interfaces/Task.html":{}}}],["currently",{"_index":81,"title":{},"body":{"interfaces/Task.html":{}}}],["data",{"_index":34,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"index.html":{}}}],["database",{"_index":281,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["decorators",{"_index":97,"title":{},"body":{"controllers/TasksController.html":{},"index.html":{}}}],["default",{"_index":186,"title":{},"body":{"injectables/TasksService.html":{}}}],["defined",{"_index":47,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["delete",{"_index":109,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{},"index.html":{}}}],["delete('/:id",{"_index":107,"title":{},"body":{"controllers/TasksController.html":{}}}],["deletetask",{"_index":92,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["deletetask(@param('id",{"_index":160,"title":{},"body":{"controllers/TasksController.html":{}}}],["deletetask(id",{"_index":106,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["deletion",{"_index":263,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependency",{"_index":292,"title":{},"body":{"index.html":{}}}],["description",{"_index":33,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"interfaces/Task.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"index.html":{},"properties.html":{}}}],["design",{"_index":287,"title":{},"body":{"index.html":{}}}],["designed",{"_index":267,"title":{},"body":{"index.html":{}}}],["detailed",{"_index":49,"title":{},"body":{"classes/CreateTaskDto.html":{},"interfaces/Task.html":{}}}],["development",{"_index":303,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":357,"title":{},"body":{"index.html":{}}}],["directory",{"_index":341,"title":{},"body":{"index.html":{}}}],["discord",{"_index":364,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":209,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documented",{"_index":316,"title":{},"body":{"index.html":{}}}],["done",{"_index":85,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/enumerations.html":{}}}],["dto",{"_index":37,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{}}}],["dto/create",{"_index":136,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["dto/get",{"_index":138,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["dtos",{"_index":326,"title":{},"body":{"index.html":{}}}],["e2e",{"_index":313,"title":{},"body":{"index.html":{}}}],["easy",{"_index":274,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":252,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":284,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":366,"title":{},"body":{"index.html":{}}}],["entry",{"_index":239,"title":{},"body":{"miscellaneous/functions.html":{}}}],["enum",{"_index":75,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":234,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":330,"title":{},"body":{"index.html":{}}}],["example",{"_index":299,"title":{},"body":{"index.html":{}}}],["export",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"interfaces/Task.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["express",{"_index":227,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":201,"title":{},"body":{"injectables/TasksService.html":{}}}],["features",{"_index":261,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":347,"title":{},"body":{"index.html":{}}}],["file",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"interfaces/Task.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"index.html":{}}}],["filter",{"_index":62,"title":{},"body":{"classes/GetTasksFilterDto.html":{},"injectables/TasksService.html":{},"index.html":{}}}],["filter.dto",{"_index":139,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["filter.dto.ts",{"_index":54,"title":{},"body":{"classes/GetTasksFilterDto.html":{},"coverage.html":{}}}],["filter.dto.ts:11",{"_index":64,"title":{},"body":{"classes/GetTasksFilterDto.html":{}}}],["filter.dto.ts:17",{"_index":61,"title":{},"body":{"classes/GetTasksFilterDto.html":{}}}],["filterdto",{"_index":120,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["filtered",{"_index":119,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["filtering",{"_index":56,"title":{},"body":{"classes/GetTasksFilterDto.html":{},"index.html":{}}}],["filters",{"_index":121,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["following",{"_index":288,"title":{},"body":{"index.html":{}}}],["foundation",{"_index":278,"title":{},"body":{"index.html":{}}}],["framework",{"_index":250,"title":{},"body":{"index.html":{}}}],["function",{"_index":212,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":236,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":318,"title":{},"body":{"index.html":{}}}],["get('/:id",{"_index":112,"title":{},"body":{"controllers/TasksController.html":{}}}],["getalltasks",{"_index":174,"title":{},"body":{"injectables/TasksService.html":{}}}],["gettaskbyid",{"_index":93,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["gettaskbyid(@param('id",{"_index":158,"title":{},"body":{"controllers/TasksController.html":{}}}],["gettaskbyid(id",{"_index":111,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["gettasks",{"_index":94,"title":{},"body":{"controllers/TasksController.html":{}}}],["gettasks(@query",{"_index":153,"title":{},"body":{"controllers/TasksController.html":{}}}],["gettasks(filterdto",{"_index":116,"title":{},"body":{"controllers/TasksController.html":{}}}],["gettasksfilterdto",{"_index":51,"title":{"classes/GetTasksFilterDto.html":{}},"body":{"classes/GetTasksFilterDto.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["gettaskswithfilters",{"_index":175,"title":{},"body":{"injectables/TasksService.html":{}}}],["gettaskswithfilters(filterdto",{"_index":181,"title":{},"body":{"injectables/TasksService.html":{}}}],["getting",{"_index":122,"title":{"index.html":{}},"body":{"controllers/TasksController.html":{}}}],["given",{"_index":115,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["grow",{"_index":371,"title":{},"body":{"index.html":{}}}],["handles",{"_index":141,"title":{},"body":{"controllers/TasksController.html":{}}}],["help",{"_index":354,"title":{},"body":{"index.html":{}}}],["here",{"_index":352,"title":{},"body":{"index.html":{}}}],["http",{"_index":142,"title":{},"body":{"controllers/TasksController.html":{},"index.html":{}}}],["https://nestjs.com",{"_index":387,"title":{},"body":{"index.html":{}}}],["id",{"_index":70,"title":{},"body":{"interfaces/Task.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"index.html":{}}}],["identifier",{"_index":72,"title":{},"body":{"interfaces/Task.html":{},"coverage.html":{}}}],["if(object.keys(filterdto).length",{"_index":154,"title":{},"body":{"controllers/TasksController.html":{}}}],["import",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"classes/GetTasksFilterDto.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"index.html":{}}}],["imported",{"_index":344,"title":{},"body":{"index.html":{}}}],["imports",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["in_progress",{"_index":83,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/enumerations.html":{}}}],["include",{"_index":283,"title":{},"body":{"index.html":{}}}],["includes",{"_index":322,"title":{},"body":{"index.html":{}}}],["including",{"_index":329,"title":{},"body":{"index.html":{}}}],["index",{"_index":43,"title":{"index.html":{}},"body":{"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"interfaces/Task.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"interfaces/Task.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["initializes",{"_index":241,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectable",{"_index":170,"title":{"injectables/TasksService.html":{}},"body":{"injectables/TasksService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":171,"title":{},"body":{"injectables/TasksService.html":{}}}],["injection",{"_index":293,"title":{},"body":{"index.html":{}}}],["insights",{"_index":360,"title":{},"body":{"index.html":{}}}],["install",{"_index":298,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":301,"title":{},"body":{"index.html":{}}}],["interface",{"_index":66,"title":{"interfaces/Task.html":{}},"body":{"interfaces/Task.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":67,"title":{},"body":{"interfaces/Task.html":{}}}],["it’s",{"_index":266,"title":{},"body":{"index.html":{}}}],["join",{"_index":377,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":384,"title":{},"body":{"index.html":{}}}],["key",{"_index":282,"title":{},"body":{"index.html":{}}}],["left",{"_index":336,"title":{},"body":{"index.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["license",{"_index":390,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":370,"title":{},"body":{"index.html":{}}}],["list",{"_index":123,"title":{},"body":{"controllers/TasksController.html":{}}}],["listening",{"_index":244,"title":{},"body":{"miscellaneous/functions.html":{}}}],["localhost:3000",{"_index":277,"title":{},"body":{"index.html":{}}}],["located",{"_index":340,"title":{},"body":{"index.html":{}}}],["logic",{"_index":325,"title":{},"body":{"index.html":{}}}],["main",{"_index":238,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maintain",{"_index":275,"title":{},"body":{"index.html":{}}}],["making",{"_index":272,"title":{},"body":{"index.html":{}}}],["manage",{"_index":191,"title":{},"body":{"injectables/TasksService.html":{}}}],["management",{"_index":247,"title":{},"body":{"index.html":{}}}],["manages",{"_index":151,"title":{},"body":{"controllers/TasksController.html":{}}}],["managing",{"_index":148,"title":{},"body":{"controllers/TasksController.html":{},"index.html":{}}}],["matching",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"interfaces/Task.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["metadata",{"_index":229,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":90,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["miscellaneous",{"_index":233,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":369,"title":{},"body":{"index.html":{}}}],["mode",{"_index":306,"title":{},"body":{"index.html":{}}}],["models",{"_index":328,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/TasksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":380,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":385,"title":{},"body":{"index.html":{}}}],["name",{"_index":74,"title":{},"body":{"interfaces/Task.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["nest",{"_index":368,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":389,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":242,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["nestjs/common",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":225,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":226,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":39,"title":{},"body":{"classes/CreateTaskDto.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"coverage.html":{},"index.html":{}}}],["newly",{"_index":104,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["node.js",{"_index":249,"title":{},"body":{"index.html":{}}}],["object",{"_index":36,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["objects",{"_index":327,"title":{},"body":{"index.html":{}}}],["offering",{"_index":260,"title":{},"body":{"index.html":{}}}],["official",{"_index":361,"title":{},"body":{"index.html":{}}}],["once",{"_index":343,"title":{},"body":{"index.html":{}}}],["open",{"_index":79,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["operations",{"_index":147,"title":{},"body":{"controllers/TasksController.html":{}}}],["optional",{"_index":60,"title":{},"body":{"classes/GetTasksFilterDto.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["optionally",{"_index":118,"title":{},"body":{"controllers/TasksController.html":{}}}],["out",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["overview",{"_index":394,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":319,"title":{},"body":{"index.html":{}}}],["package",{"_index":223,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":131,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["param('id",{"_index":163,"title":{},"body":{"controllers/TasksController.html":{}}}],["parameters",{"_index":101,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["patch",{"_index":132,"title":{},"body":{"controllers/TasksController.html":{},"index.html":{}}}],["patch('/:id/status",{"_index":126,"title":{},"body":{"controllers/TasksController.html":{}}}],["please",{"_index":378,"title":{},"body":{"index.html":{}}}],["point",{"_index":240,"title":{},"body":{"miscellaneous/functions.html":{}}}],["port",{"_index":245,"title":{},"body":{"miscellaneous/functions.html":{}}}],["post",{"_index":98,"title":{},"body":{"controllers/TasksController.html":{},"index.html":{}}}],["postman",{"_index":331,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":258,"title":{},"body":{"index.html":{}}}],["practices",{"_index":270,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":89,"title":{},"body":{"controllers/TasksController.html":{}}}],["principles",{"_index":290,"title":{},"body":{"index.html":{}}}],["private",{"_index":173,"title":{},"body":{"injectables/TasksService.html":{}}}],["production",{"_index":308,"title":{},"body":{"index.html":{}}}],["progress",{"_index":82,"title":{},"body":{"interfaces/Task.html":{}}}],["progressive",{"_index":248,"title":{},"body":{"index.html":{}}}],["project",{"_index":296,"title":{},"body":{"index.html":{}}}],["properties",{"_index":44,"title":{"properties.html":{}},"body":{"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"interfaces/Task.html":{},"injectables/TasksService.html":{},"properties.html":{}}}],["provided",{"_index":124,"title":{},"body":{"controllers/TasksController.html":{},"index.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["provides",{"_index":145,"title":{},"body":{"controllers/TasksController.html":{},"index.html":{}}}],["query",{"_index":133,"title":{},"body":{"controllers/TasksController.html":{}}}],["read",{"_index":379,"title":{},"body":{"index.html":{}}}],["real",{"_index":358,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":228,"title":{},"body":{"dependencies.html":{}}}],["related",{"_index":144,"title":{},"body":{"controllers/TasksController.html":{},"index.html":{}}}],["repository",{"_index":342,"title":{},"body":{"index.html":{}}}],["representing",{"_index":76,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/enumerations.html":{}}}],["represents",{"_index":69,"title":{},"body":{"interfaces/Task.html":{}}}],["requests",{"_index":143,"title":{},"body":{"controllers/TasksController.html":{},"index.html":{}}}],["reset",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["resources",{"_index":351,"title":{},"body":{"index.html":{}}}],["restful",{"_index":289,"title":{},"body":{"index.html":{}}}],["results",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"interfaces/Task.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["retrieve",{"_index":114,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["return",{"_index":155,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["returns",{"_index":103,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["robust",{"_index":273,"title":{},"body":{"index.html":{}}}],["routes",{"_index":346,"title":{},"body":{"index.html":{}}}],["run",{"_index":302,"title":{},"body":{"index.html":{}}}],["runs",{"_index":276,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":231,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":253,"title":{},"body":{"index.html":{}}}],["search",{"_index":58,"title":{},"body":{"classes/GetTasksFilterDto.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"index.html":{}}}],["searching",{"_index":265,"title":{},"body":{"index.html":{}}}],["server",{"_index":254,"title":{},"body":{"index.html":{}}}],["service",{"_index":150,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["services",{"_index":323,"title":{},"body":{"index.html":{}}}],["setup",{"_index":297,"title":{},"body":{"index.html":{}}}],["side",{"_index":255,"title":{},"body":{"index.html":{}}}],["source",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"interfaces/Task.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"index.html":{}}}],["sponsors",{"_index":373,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":237,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../task.model.ts",{"_index":235,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.module.ts",{"_index":19,"title":{},"body":{"modules/AppModule.html":{}}}],["src/main.ts",{"_index":211,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/tasks/dto/create",{"_index":31,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["src/tasks/dto/get",{"_index":52,"title":{},"body":{"classes/GetTasksFilterDto.html":{},"coverage.html":{}}}],["src/tasks/task.model.ts",{"_index":68,"title":{},"body":{"interfaces/Task.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/tasks/tasks.controller.ts",{"_index":88,"title":{},"body":{"controllers/TasksController.html":{},"coverage.html":{}}}],["src/tasks/tasks.controller.ts:25",{"_index":117,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:39",{"_index":113,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:48",{"_index":108,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:58",{"_index":99,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:71",{"_index":127,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.module.ts",{"_index":168,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/tasks/tasks.service.ts",{"_index":172,"title":{},"body":{"injectables/TasksService.html":{},"coverage.html":{}}}],["src/tasks/tasks.service.ts:16",{"_index":188,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:22",{"_index":178,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:31",{"_index":182,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:57",{"_index":180,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:65",{"_index":177,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:74",{"_index":176,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:93",{"_index":185,"title":{},"body":{"injectables/TasksService.html":{}}}],["start",{"_index":304,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":307,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":309,"title":{},"body":{"index.html":{}}}],["started",{"_index":80,"title":{"index.html":{}},"body":{"interfaces/Task.html":{}}}],["starts",{"_index":243,"title":{},"body":{"miscellaneous/functions.html":{}}}],["statements",{"_index":210,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":57,"title":{},"body":{"classes/GetTasksFilterDto.html":{},"interfaces/Task.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"index.html":{}}}],["statuses",{"_index":78,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/enumerations.html":{}}}],["stay",{"_index":381,"title":{},"body":{"index.html":{}}}],["string",{"_index":46,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"interfaces/Task.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["structure",{"_index":294,"title":{},"body":{"index.html":{}}}],["such",{"_index":184,"title":{},"body":{"injectables/TasksService.html":{},"index.html":{}}}],["support",{"_index":367,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":392,"title":{},"body":{"modules.html":{}}}],["table",{"_index":222,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":221,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":40,"title":{"interfaces/Task.html":{}},"body":{"classes/CreateTaskDto.html":{},"interfaces/Task.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["task.description.includes(search",{"_index":199,"title":{},"body":{"injectables/TasksService.html":{}}}],["task.dto",{"_index":137,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["task.dto.ts",{"_index":32,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["task.dto.ts:14",{"_index":48,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["task.dto.ts:9",{"_index":50,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["task.id",{"_index":203,"title":{},"body":{"injectables/TasksService.html":{}}}],["task.model",{"_index":65,"title":{},"body":{"classes/GetTasksFilterDto.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["task.status",{"_index":197,"title":{},"body":{"injectables/TasksService.html":{}}}],["task.title.includes(search",{"_index":198,"title":{},"body":{"injectables/TasksService.html":{}}}],["taskmanagement.postman_collection.json",{"_index":339,"title":{},"body":{"index.html":{}}}],["tasks",{"_index":53,"title":{},"body":{"classes/GetTasksFilterDto.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"coverage.html":{},"index.html":{}}}],["tasks.controller",{"_index":169,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks.filter((task",{"_index":196,"title":{},"body":{"injectables/TasksService.html":{}}}],["tasks.service",{"_index":135,"title":{},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{}}}],["tasks/:id",{"_index":350,"title":{},"body":{"index.html":{}}}],["tasks/:id/status",{"_index":349,"title":{},"body":{"index.html":{}}}],["tasks/tasks.module",{"_index":23,"title":{},"body":{"modules/AppModule.html":{}}}],["taskscontroller",{"_index":87,"title":{"controllers/TasksController.html":{}},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["tasksmodule",{"_index":11,"title":{"modules/TasksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksservice",{"_index":134,"title":{"injectables/TasksService.html":{}},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"overview.html":{}}}],["taskstatus",{"_index":63,"title":{},"body":{"classes/GetTasksFilterDto.html":{},"interfaces/Task.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"miscellaneous/enumerations.html":{}}}],["taskstatus.open",{"_index":205,"title":{},"body":{"injectables/TasksService.html":{}}}],["term",{"_index":59,"title":{},"body":{"classes/GetTasksFilterDto.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["terms",{"_index":285,"title":{},"body":{"index.html":{}}}],["test",{"_index":312,"title":{},"body":{"index.html":{}}}],["test:covdocumentation",{"_index":315,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":314,"title":{},"body":{"index.html":{}}}],["testing",{"_index":333,"title":{},"body":{"index.html":{}}}],["tests",{"_index":310,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":372,"title":{},"body":{"index.html":{}}}],["this.getalltasks",{"_index":195,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.gettaskbyid(id",{"_index":207,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks",{"_index":193,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks.filter((task",{"_index":204,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks.find((task",{"_index":202,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks.push(task",{"_index":206,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasksservice.createtask(createtaskdto",{"_index":162,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.tasksservice.deletetask(id",{"_index":161,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.tasksservice.getalltasks",{"_index":157,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.tasksservice.gettaskbyid(id",{"_index":159,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.tasksservice.gettaskswithfilters(filterdto",{"_index":156,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.tasksservice.updatetaskstatus(id",{"_index":165,"title":{},"body":{"controllers/TasksController.html":{}}}],["time",{"_index":359,"title":{},"body":{"index.html":{}}}],["title",{"_index":42,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"interfaces/Task.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["touch",{"_index":382,"title":{},"body":{"index.html":{}}}],["transfer",{"_index":35,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"index.html":{}}}],["true",{"_index":200,"title":{},"body":{"injectables/TasksService.html":{}}}],["tsconfig.jsonserve",{"_index":320,"title":{},"body":{"index.html":{}}}],["twitter",{"_index":388,"title":{},"body":{"index.html":{}}}],["type",{"_index":45,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTasksFilterDto.html":{},"interfaces/Task.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["typescript",{"_index":271,"title":{},"body":{"index.html":{}}}],["understand",{"_index":355,"title":{},"body":{"index.html":{}}}],["unique",{"_index":71,"title":{},"body":{"interfaces/Task.html":{}}}],["unit",{"_index":311,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":399,"title":{},"body":{"properties.html":{}}}],["update",{"_index":128,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{},"index.html":{}}}],["updated",{"_index":129,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["updatetaskstatus",{"_index":95,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["updatetaskstatus(id",{"_index":125,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["updating",{"_index":264,"title":{},"body":{"index.html":{}}}],["upper",{"_index":335,"title":{},"body":{"index.html":{}}}],["used",{"_index":55,"title":{},"body":{"classes/GetTasksFilterDto.html":{}}}],["using",{"_index":268,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":190,"title":{},"body":{"injectables/TasksService.html":{},"dependencies.html":{}}}],["v4",{"_index":189,"title":{},"body":{"injectables/TasksService.html":{}}}],["value",{"_index":187,"title":{},"body":{"injectables/TasksService.html":{},"miscellaneous/enumerations.html":{}}}],["various",{"_index":77,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/enumerations.html":{}}}],["version",{"_index":397,"title":{},"body":{"properties.html":{}}}],["video",{"_index":362,"title":{},"body":{"index.html":{}}}],["void",{"_index":110,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["watch",{"_index":305,"title":{},"body":{"index.html":{}}}],["website",{"_index":386,"title":{},"body":{"index.html":{}}}],["work",{"_index":356,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":300,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":376,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nTasksModule\n\nTasksModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            TasksModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TasksModule } from './tasks/tasks.module';\n\n\n@Module({\n  imports: [TasksModule],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTaskDto.html":{"url":"classes/CreateTaskDto.html","title":"class - CreateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/dto/create-task.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Data Transfer Object (DTO) for creating a new task.\nContains the title and description of the task.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/tasks/dto/create-task.dto.ts:14\n                        \n                    \n\n            \n                \n                    A detailed description of the task.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/tasks/dto/create-task.dto.ts:9\n                        \n                    \n\n            \n                \n                    The title of the task.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateTaskDto {\n    /**\n     * The title of the task.\n     */\n    title: string;\n\n    /**\n     * A detailed description of the task.\n     */\n    description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetTasksFilterDto.html":{"url":"classes/GetTasksFilterDto.html","title":"class - GetTasksFilterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetTasksFilterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/dto/get-tasks-filter.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Data Transfer Object (DTO) used for filtering tasks by status and search term.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                search\n                            \n                            \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/tasks/dto/get-tasks-filter.dto.ts:17\n                        \n                    \n\n            \n                \n                    A search term to filter tasks by title or description.\nOptional.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskStatus\n\n                    \n                \n                    \n                        \n                                Defined in src/tasks/dto/get-tasks-filter.dto.ts:11\n                        \n                    \n\n            \n                \n                    The status of the tasks to filter by.\nOptional.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TaskStatus } from \"../task.model\";\n\n/**\n * Data Transfer Object (DTO) used for filtering tasks by status and search term.\n */\nexport class GetTasksFilterDto {\n    /**\n     * The status of the tasks to filter by.\n     * Optional.\n     */\n    status?: TaskStatus;\n\n    /**\n     * A search term to filter tasks by title or description.\n     * Optional.\n     */\n    search?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/task.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a task with an ID, title, description, and status.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A detailed description of the task.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The unique identifier for the task.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         TaskStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TaskStatus\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The current status of the task.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title or name of the task.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Task {\n    /**\n     * The unique identifier for the task.\n     */\n    id: string;\n\n    /**\n     * The title or name of the task.\n     */\n    title: string;\n\n    /**\n     * A detailed description of the task.\n     */\n    description: string;\n\n    /**\n     * The current status of the task.\n     */\n    status: TaskStatus;\n}\n\n/**\n * Enum representing the various statuses a task can have.\n */\nexport enum TaskStatus {\n    /**\n     * The task is open and has not been started yet.\n     */\n    OPEN = 'OPEN',\n\n    /**\n     * The task is currently in progress.\n     */\n    IN_PROGRESS = 'IN_PROGRESS',\n\n    /**\n     * The task has been completed.\n     */\n    DONE = 'DONE',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TasksController.html":{"url":"controllers/TasksController.html","title":"controller - TasksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TasksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/tasks.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tasks\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createTask\n                            \n                            \n                                    \n                                deleteTask\n                            \n                            \n                                    \n                                getTaskById\n                            \n                            \n                                    \n                                getTasks\n                            \n                            \n                                    \n                                updateTaskStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTask(createTaskDto: CreateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/tasks/tasks.controller.ts:58\n                        \n                    \n\n\n            \n                \n                        Create a new task.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createTaskDto\n                                            \n                                                            CreateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing the title and description of the task.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Task\n\n                        \n                            \n                                The newly created task.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteTask(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/tasks/tasks.controller.ts:48\n                        \n                    \n\n\n            \n                \n                        Delete a task by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the task to delete.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTaskById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/tasks/tasks.controller.ts:39\n                        \n                    \n\n\n            \n                \n                        Get a task by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the task to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Task\n\n                        \n                            \n                                The task with the given ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getTasks\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTasks(filterDto: GetTasksFilterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/tasks/tasks.controller.ts:25\n                        \n                    \n\n\n            \n                \n                        Get tasks, optionally filtered by status or search term.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filterDto\n                                            \n                                                            GetTasksFilterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nOptional filters for getting tasks.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Task[]\n\n                        \n                            \n                                A list of tasks, filtered or all tasks if no filters are provided.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateTaskStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTaskStatus(id: string, status: TaskStatus)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id/status')\n                \n            \n\n                    \n                        \n                            Defined in src/tasks/tasks.controller.ts:71\n                        \n                    \n\n\n            \n                \n                        Update the status of a task.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the task to update.\n\n\n                                            \n                                        \n                                        \n                                                status\n                                            \n                                                            TaskStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new status of the task.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Task\n\n                        \n                            \n                                The updated task.\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post, Query } from '@nestjs/common';\nimport { TasksService } from './tasks.service';\nimport { Task, TaskStatus } from './task.model';\nimport { CreateTaskDto } from './dto/create-task.dto';\nimport { GetTasksFilterDto } from './dto/get-tasks-filter.dto';\n\n@Controller('tasks')\n/**\n* Controller that handles HTTP requests related to tasks.\n* Provides CRUD operations for managing tasks.\n*/\nexport class TasksController {\n    /**\n    * Constructor for TasksController.\n    * @param {TasksService} tasksService - The service that manages task-related operations.\n    */\n    constructor(private tasksService: TasksService) {}\n\n    /**\n    * Get tasks, optionally filtered by status or search term.\n    * @param {GetTasksFilterDto} filterDto - Optional filters for getting tasks.\n    * @returns {Task[]} A list of tasks, filtered or all tasks if no filters are provided.\n    */\n    @Get()\n    getTasks(@Query() filterDto: GetTasksFilterDto): Task[] {\n        if(Object.keys(filterDto).length){\n            return this.tasksService.getTasksWithFilters(filterDto);\n        } else {\n        return this.tasksService.getAllTasks();\n        }\n    }\n\n    /**\n    * Get a task by its ID.\n    * @param {string} id - The ID of the task to retrieve.\n    * @returns {Task} The task with the given ID.\n    */\n    @Get('/:id')\n    getTaskById(@Param('id') id: string): Task {\n        return this.tasksService.getTaskById(id);\n    }\n\n    /**\n    * Delete a task by its ID.\n    * @param {string} id - The ID of the task to delete.\n    */\n    @Delete('/:id')\n    deleteTask(@Param('id') id: string): void{\n        this.tasksService.deleteTask(id);\n    }\n\n    /**\n    * Create a new task.\n    * @param {CreateTaskDto} createTaskDto - The data transfer object containing the title and description of the task.\n    * @returns {Task} The newly created task.\n    */\n    @Post()\n    createTask(\n        @Body() createTaskDto: CreateTaskDto\n    ): Task {\n        return this.tasksService.createTask(createTaskDto);\n    }\n\n    /**\n    * Update the status of a task.\n    * @param {string} id - The ID of the task to update.\n    * @param {TaskStatus} status - The new status of the task.\n    * @returns {Task} The updated task.\n     */\n    @Patch('/:id/status')\n    updateTaskStatus(\n        @Param('id') id: string,\n        @Body('status') status: TaskStatus,\n    ): Task {\n        return this.tasksService.updateTaskStatus(id, status);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nTasksService\n\nTasksService\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tasks/tasks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TasksService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TasksController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TasksController } from './tasks.controller';\nimport { TasksService } from './tasks.service';\n\n@Module({\n  controllers: [TasksController],\n  providers: [TasksService]\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TasksService.html":{"url":"injectables/TasksService.html","title":"injectable - TasksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/tasks.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                tasks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTask\n                            \n                            \n                                deleteTask\n                            \n                            \n                                getAllTasks\n                            \n                            \n                                getTaskById\n                            \n                            \n                                getTasksWithFilters\n                            \n                            \n                                updateTaskStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createTask\n                        \n                    \n                \n            \n            \n                \ncreateTask(createTaskDto: CreateTaskDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tasks/tasks.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Create a new task.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createTaskDto\n                                            \n                                                            CreateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data transfer object containing title and description.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Task\n\n                        \n                            \n                                The newly created task.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tasks/tasks.service.ts:65\n                        \n                    \n\n\n            \n                \n                        Delete a task by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the task to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllTasks\n                        \n                    \n                \n            \n            \n                \ngetAllTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/tasks/tasks.service.ts:22\n                        \n                    \n\n\n            \n                \n                        Get all tasks.\n\n\n                        \n                            Returns :         Task[]\n\n                        \n                            \n                                An array of tasks.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTaskById\n                        \n                    \n                \n            \n            \n                \ngetTaskById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tasks/tasks.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Get a task by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the task to retrieve.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Task\n\n                        \n                            \n                                The task with the given ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTasksWithFilters\n                        \n                    \n                \n            \n            \n                \ngetTasksWithFilters(filterDto: GetTasksFilterDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tasks/tasks.service.ts:31\n                        \n                    \n\n\n            \n                \n                        Get tasks based on filters such as status and search term.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filterDto\n                                            \n                                                            GetTasksFilterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The filter data transfer object.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Task[]\n\n                        \n                            \n                                Filtered tasks.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTaskStatus\n                        \n                    \n                \n            \n            \n                \nupdateTaskStatus(id: string, status: TaskStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tasks/tasks.service.ts:93\n                        \n                    \n\n\n            \n                \n                        Update the status of a task.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the task to update.\n\n                                            \n                                        \n                                        \n                                                status\n                                            \n                                                            TaskStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new status of the task.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Task\n\n                        \n                            \n                                The updated task.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/tasks/tasks.service.ts:16\n                        \n                    \n\n            \n                \n                    Array of tasks.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Task, TaskStatus } from './task.model';\nimport { v4 as uuid } from 'uuid';\nimport { CreateTaskDto } from './dto/create-task.dto';\nimport { GetTasksFilterDto } from './dto/get-tasks-filter.dto';\n\n@Injectable()\n/**\n * Service to manage tasks in the application.\n */\nexport class TasksService {\n    /**\n    * Array of tasks.\n    * @private\n    */\n    private tasks: Task[] = [];\n\n    /**\n    * Get all tasks.\n    * @returns {Task[]} An array of tasks.\n    */\n    getAllTasks(): Task[] {\n        return this.tasks;\n    }\n\n    /**\n    * Get tasks based on filters such as status and search term.\n    * @param {GetTasksFilterDto} filterDto The filter data transfer object.\n    * @returns {Task[]} Filtered tasks.\n    */\n    getTasksWithFilters(filterDto: GetTasksFilterDto): Task[] {\n        const { status, search } = filterDto;\n\n        let tasks = this.getAllTasks(); \n\n        if (status) {\n            tasks = tasks.filter((task) => task.status === status);\n        }\n\n        if (search) {\n            tasks = tasks.filter((task) => {\n                if (task.title.includes(search) || task.description.includes(search)) {\n                    return true;\n                }\n                return false;\n            });\n        }\n\n        return tasks;\n    }\n\n    /**\n    * Get a task by its ID.\n    * @param {string} id The ID of the task to retrieve.\n    * @returns {Task} The task with the given ID.\n    */\n    getTaskById(id: string): Task{\n        return this.tasks.find((task) => task.id === id)\n    }\n\n    /**\n    * Delete a task by its ID.\n    * @param {string} id The ID of the task to delete.\n    */\n    deleteTask(id: string): void {\n        this.tasks = this.tasks.filter((task) => task.id !== id);\n    }\n\n    /**\n    * Create a new task.\n    * @param {CreateTaskDto} createTaskDto The data transfer object containing title and description.\n    * @returns {Task} The newly created task.\n    */\n    createTask(createTaskDto: CreateTaskDto): Task {\n        const { title, description} = createTaskDto;\n        const task: Task = {\n            id: uuid(),\n            title,\n            description,\n            status: TaskStatus.OPEN,\n        };\n        \n        this.tasks.push(task);\n        return task;\n    }\n\n    /**\n    * Update the status of a task.\n    * @param {string} id The ID of the task to update.\n    * @param {TaskStatus} status The new status of the task.\n    * @returns {Task} The updated task.\n    */\n    updateTaskStatus(id: string, status: TaskStatus): Task {\n        const task =  this.getTaskById(id);\n        task.status = status;\n        return task;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tasks/dto/create-task.dto.ts\n            \n            class\n            CreateTaskDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/tasks/dto/get-tasks-filter.dto.ts\n            \n            class\n            GetTasksFilterDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/tasks/task.model.ts\n            \n            interface\n            Task\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/tasks/tasks.controller.ts\n            \n            controller\n            TasksController\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/tasks/tasks.service.ts\n            \n            injectable\n            TasksService\n            \n                87 %\n                (7/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            uuid : ^10.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TaskStatus   (src/.../task.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/tasks/task.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskStatus\n                    \n                \n                    \n                        \n                            Enum representing the various statuses a task can have.\n\n                        \n                    \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                Value : OPEN\n                            \n                        \n                        \n                            \n                                 IN_PROGRESS\n                            \n                        \n                        \n                            \n                                Value : IN_PROGRESS\n                            \n                        \n                        \n                            \n                                 DONE\n                            \n                        \n                        \n                            \n                                Value : DONE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                        The main entry point for the application.\nInitializes the NestJS application and starts listening on port 3000.\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTask Management Application\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nThis is a task management application built with the NestJS framework. It provides a powerful and scalable backend for managing tasks, offering features such as task creation, deletion, updating, and searching. It’s designed using best practices in Node.js and TypeScript, making it robust and easy to maintain. This runs on localhost:3000 since it is the foundation before adding a database.\nKey features include:\n\nTask creation and management: Create, update, and delete tasks efficiently.\nTask filtering: Filter tasks based on status or search terms.\nEfficient API design: Following RESTful principles.\nNestJS core features: Using decorators, dependency injection, and modules to structure the app.\n\nProject setup\nInstall Dependencies\nExample :$ yarn installCompile and run the project\nExample :# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodRun tests\nExample :# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covDocumentation\nThis project is documented using Compodoc.\nGenerate Documentation\nExample :$ compodoc -p tsconfig.jsonServe Documentation\nExample :$ yarn run compodocAvailable Documentation Includes:\n\nControllers: Managing HTTP requests related to tasks.\nServices: Task management business logic.\nDTOs (Data Transfer Objects): For task creation and filtering.\nModels: Task data structure, including status enums.\n\nPostman Collection\nI have provided a Postman collection for testing the API.\nImport the Postman Collection\n\nOpen Postman.\nClick on \"Import\" in the upper left corner.\nChoose the TaskManagement.postman_collection.json file located in the /postman directory of this repository.\nOnce imported, you will be able to test all available API routes.\n\nThe Postman collection includes:\nGET /tasks: Fetch all tasks or filter them based on criteria.\nPOST /tasks: Create a new task.\nPATCH /tasks/:id/status: Update the status of a task.\nDELETE /tasks/:id: Delete a task by its ID.\nResources\nHere are some additional resources to help you understand and work with this application:\nNestJS Documentation\nNestJS Devtools for real-time insights into your application\nOfficial NestJS Video Courses\nOfficial NestJS Discord Channel\nEnterprise Support for NestJS\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nTasksModule\n\nTasksModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
